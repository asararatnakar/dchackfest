version: '2'

services:

  orderer0:
    container_name: orderer0
    image: hyperledger/fabric-orderer:x86_64-1.0.0-alpha
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/msp/keystore/764b3c76f2952f5a4d734d4d6dfe529b5ac24109f12957a6f61f0d99687a0993_sk
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/msp/signcerts/orderer.example.com-cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/msp/cacerts/example.com-cert.pem]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
    - ./orderer.block:/var/hyperledger/orderer/orderer.block
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com:/var/hyperledger/orderer/msp
    ports:
      - 7050:7050

## To enable CouchDB as state database, uncomment the following sections of this file:
## 1) couchdb containers
## 2) peer environment variables CORE_LEDGER_STATE_STATEDATABASE and
##    CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
## 3) couch container names in "depends_on" section

#  couchdb0:
#    container_name: couchdb0
#    image: hyperledger/fabric-couchdb
##   Uncomment the port mapping if you want to expose the CouchDB service,
##   for example to utilize Fauxton User Interface in dev environments.
#    ports:
#      - "5984:5984"

  peer0:
    container_name: peer0
    extends:
      file: peer-base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0:7051
      - CORE_PEER_LOCALMSPID=Org0MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/signcerts/peer0.org1.example.com-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/msp/sampleconfig/keystore/7e93f41377a7d7b2f243a19b7d00078e56bfa2a87864713604a83270a697c6ea_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/cacerts/org1.example.com-cert.pem
      # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com:/etc/hyperledger/fabric/msp/sampleconfig
    ports:
      - 7051:7051
      - 7053:7053
    depends_on:
      - orderer0
      # - couchdb0

#  couchdb1:
#    container_name: couchdb1
#    image: hyperledger/fabric-couchdb
##   Uncomment the port mapping if you want to expose the CouchDB service,
##   for example to utilize Fauxton User Interface in dev environments.
#    ports:
#      - "6984:5984"

  peer1:
    container_name: peer1
    extends:
      file: peer-base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0:7051
      - CORE_PEER_LOCALMSPID=Org0MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/signcerts/peer1.org1.example.com-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/msp/sampleconfig/keystore/19396ab22c63df5a30f03947576c222326672e0de48ed431c3f23431d08c7f71_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/cacerts/org1.example.com-cert.pem
      # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com:/etc/hyperledger/fabric/msp/sampleconfig
    ports:
      - 8051:7051
      - 8053:7053
    depends_on:
      - orderer0
      - peer0
      # - couchdb1

#  couchdb2:
#    container_name: couchdb2
#    image: hyperledger/fabric-couchdb
##   Uncomment the port mapping if you want to expose the CouchDB service,
##   for example to utilize Fauxton User Interface in dev environments.
#    ports:
#      - "7984:5984"

  peer2:
    container_name: peer2
    extends:
      file: peer-base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer2
      - CORE_PEER_ADDRESS=peer2:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer2:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/signcerts/peer0.org2.example.com-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/msp/sampleconfig/keystore/16293945d0d8024c6256de561bb9201578d40736136524f6a363c759bf161ea7_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/cacerts/org2.example.com-cert.pem
      # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com:/etc/hyperledger/fabric/msp/sampleconfig
    ports:
      - 9051:7051
      - 9053:7053
    depends_on:
      - orderer0
      - peer0
      - peer1
      # - couchdb2

#  couchdb3:
#    container_name: couchdb3
#    image: hyperledger/fabric-couchdb
##   Uncomment the port mapping if you want to expose the CouchDB service,
##   for example to utilize Fauxton User Interface in dev environments.
#    ports:
#      - "8984:5984"

  peer3:
    container_name: peer3
    extends:
      file: peer-base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer3
      - CORE_PEER_ADDRESS=peer3:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer3:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer2:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/signcerts/peer1.org2.example.com-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/msp/sampleconfig/keystore/6949e7f2c5f35e12db370d76efb21229aaea0f2a162fef1eeb44f77d071efe4e_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/msp/sampleconfig/cacerts/org2.example.com-cert.pem
      # - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com:/etc/hyperledger/fabric/msp/sampleconfig
    ports:
      - 10051:7051
      - 10053:7053
    depends_on:
      - orderer0
      - peer0
      - peer1
      - peer2
      # - couchdb3

  cli:
    container_name: cli
    image: hyperledger/fabric-peer:x86_64-1.0.0-alpha
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_PEER_ID=cli
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_LOCALMSPID=Org0MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/signcerts/peer0.org1.example.com-cert.pem
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/keystore/7e93f41377a7d7b2f243a19b7d00078e56bfa2a87864713604a83270a697c6ea_sk
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/cacerts/org1.example.com-cert.pem
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c './scripts/script.sh ${CHANNEL_NAME}; sleep 1000'
    #command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincodes:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel.tx:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel.tx
    depends_on:
      - orderer0
      - peer0
      - peer1
      - peer2
      - peer3
